# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: CD Pipeline

on:
  push:
    branches: [pipeline-test]
  
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Official SonarQube Scan
      # uses: SonarSource/sonarqube-scan-action@a6ba0aafc293e03de5437af7edbc97f7d3ebc91a
      uses: SonarSource/sonarqube-scan-action@v1.2.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      with:
        # Additional arguments to the sonar-scanner
        #args: # optional
        # Set the sonar.projectBaseDir analysis property
        projectBaseDir: .
        arguments: '-Dsonar.projectKey=anshuman1112_devops-assessment -Dsonar.organization=anshuman1112'
      
#     - name: Set up JDK 11
#       uses: actions/setup-java@v3
#       with:
#         java-version: '11'
#         distribution: 'temurin'
#         server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
#         settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: |
        cd my-app
        mvn clean install
    
    - name: Run the jar file
      run: |
        cd my-app/target
        ls -al
        java -jar my-app-0.0.1-SNAPSHOT.jar &
        sleep 20
    
    - name: Install Newman
      run: |
          npm install -g newman

    - name: Test API with Postman
      run: |
          newman run DevOps-Assessment.postman_collection.json

#     - name: Publish to GitHub Packages Apache Maven
#       run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
#       env:
#         GITHUB_TOKEN: ${{ github.token }}
